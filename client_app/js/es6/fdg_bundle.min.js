var _MathPI=Math.PI,_Mathsqrt=Math.sqrt;(function(){'use strict';function a(E='svg',F={},G=[]){const H=document.createElementNS('http://www.w3.org/2000/svg',E);return Object.keys(F).forEach((I)=>{H.setAttribute(I,F[I])}),G.forEach((I)=>{'string'==typeof I?H.appendChild(document.createTextNode(I)):I&&H.appendChild(I)}),H}const e=(()=>{function E(G){return F[G]||(F[G]=new Set),F[G]}const F={};return{on(G,H){E(G).add(H)},once(G,H){const I=(...J)=>{E(G).delete(I),H(...J)};E(G).add(I)},off(G,H){E(G).delete(H)},emit(G,...H){E(G).forEach((I)=>I(...H))},count(G){return E(G).size}}})(),p={DOM:{svg(...E){return a('svg',...E)},g(...E){return a('g',...E)},circle(...E){return a('circle',...E)},rect(...E){return a('rect',...E)},text(...E){return a('text',...E)},path(...E){return a('path',...E)}}},q=(()=>{const E=Math.random,F=()=>(0|16*E()).toString(16),G=()=>(8|(16*E()|0)).toString(16);return function(){const I=('000000000000'+new Date().getTime().toString(16)).slice(-12);return I.slice(0,8)+'-'+I.slice(-4)+'-4'+F()+F()+F()+'-'+G()+F()+F()+F()+'-'+F()+F()+F()+F()+F()+F()+F()+F()+F()+F()+F()+F()}})();class u{constructor(E=0,F=0){E&&'x'in E&&'y'in E?(this.x=E.x,this.y=E.y):(this.x=E,this.y=F)}zero(){return this.x=0,this.y=0,this}clone(){return new u(this)}randomize(E=100,F=100,G=10){return this.x=Math.random()*(E-G),this.y=Math.random()*(F-G),this}add({x:E,y:F}){return this.x+=E,this.y+=F,this}subtract({x:E,y:F}){return this.x-=E,this.y-=F,this}multiply(E=1){return this.x*=E,this.y*=E,this}divide(E=1){return this.x/=E,this.y/=E,this}normalize(){return this.divide(this.magnitude())}magnitude(){return _Mathsqrt(this.x*this.x+this.y*this.y)}}const z=['model','view','controller','lookup','module','config','group'];class A{static get nodeTypes(){return z}constructor({guid:E=q(),label:F='New Node',description:G='',nodeType:H='model',point:I=null,radius:J=10,color:K='#cccccc',colorAnchored:L='#aaaaaa',colorHighlight:M='#aaaaff',colorSelected:N='#f5f5f5',selected:O=!1,highlighted:P=!1,forces:Q=new u,velocity:R=new u,group:S=null},T){this.guid=E,this.label=F,this.description=G,this.nodeType=z.indexOf(H)?H:'model',this.point=I?new u(I):new u,this.radius=J,this.color=K,this.colorAnchored=L,this.colorHighlight=M,this.colorSelected=N,this.selected=O,this.highlighted=P,this.forces=new u(Q),this.velocity=new u(R),this.group=S,I||this.point.randomize(T.width,T.height,this.radius)}path(){return this.group?[...this.group.path(),this]:[this]}visibleTree(){return[this]}visibleBranch(){let E;return this.group&&(E=this.group.visibleBranch()),E||this}toJSON(){return{guid:this.guid,label:this.label,description:this.description,nodeType:this.nodeType,point:this.point,radius:this.radius,color:this.color,colorAnchored:this.colorAnchored,colorHighlight:this.colorHighlight,colorSelected:this.colorSelected,selected:this.selected,highlighted:this.highlighted,forces:this.forces,velocity:this.velocity,group:this.group?this.group.guid:null}}}class B extends A{constructor(E,F){const{label:H='New Group',children:I=[],collapsed:J=!1,radius:K=null,point:G}=E;super(E,F),this.label=H,this.children=I,this.collapsed=J,this.children.forEach((L)=>{'string'==typeof L||(L.group=this)}),this.graph=F,K||this.computeRadius(),G||0!==this.children.length||this.point.randomize(F.width,F.height,this.radius)}computeRadius(){const E=this.children.reduce((F,G)=>_MathPI*G.radius**2,0);this.radius=Math.max(Math.min(20,_Mathsqrt(E/_MathPI)),10)}addChild(E){-1<this.children.indexOf(E)||(this.children.push(E),E.group=this,this.computeRadius())}removeChild(E){const F=this.children.indexOf(E);0>F||(this.children.splice(F,1),E.group===this&&(this.child.group=null),this.computeRadius())}visibleTree(){return this.collapsed?[this]:[].concat(...this.children.map((E)=>[].concat(E.visibleTree())))}visibleBranch(){let E;return this.group&&(E=this.group.visibleBranch()),!E&&this.collapsed&&(E=this),E}toggle(){this.collapsed=!this.collapsed,this.collapsed,this.graph.computePairs()}toJSON(){return{guid:this.guid,label:this.label,description:this.description,nodeType:this.nodeType,point:this.point,radius:this.radius,color:this.color,colorAnchored:this.colorAnchored,colorHighlight:this.colorHighlight,colorSelected:this.colorSelected,selected:this.selected,highlighted:this.highlighted,forces:this.forces,velocity:this.velocity,group:this.group?this.group.guid:null,collapsed:this.collapsed,children:this.children.map((E)=>E.guid)}}}class C{constructor({}){}}console(!!e,!!p,!!{GUID:q,Point:u,Graph:class{constructor({guid:E=q(),label:F=`New Graph ${new Date().toISOString()}`,notes:G='',width:H=1600,height:I=1600,orbit:J=60,radius:K=10,speed:L=0.5,damping:M=0.5,running:N=!0,spreading:O=500,spring:P=1,nodes:Q=[],groups:R=[],connections:S=[]}){function T(U,V){return U[V.guid]=V,U}this.guid=E,this.label=F,this.notes=G,this.width=H,this.height=I,this.orbit=J,this.radius=K,this.speed=L,this.damping=M,this.running=N,this.spreading=O,this.spring=P,this.nodes=Q.map((U)=>new A(U,this)),this.groups=R.map((U)=>new B(U,this)),this.connections=S.map((U)=>new C(U,this)),this.virtualConnections=[],this.spreadingPairs=[],this.lastStep=Date.now(),this.indexNodes=this.nodes.reduce(T,{}),this.indexGroups=this.groups.reduce(T,{}),this.indexConnections=this.connections.reduce(T,{}),this.groups.forEach((U)=>{U.children=U.children.map((V)=>this.indexNodes[V]||this.indexGroups[V]),U.group&&(U.group=this.indexGroups[U.group])}),this.nodes.forEach((U)=>{U.group&&(U.group=this.indexGroups[U.group])}),this.connections.forEach((U)=>{U.alpha=this.indexNodes[U.alpha],U.beta=this.indexNodes[U.beta]}),this.computePairs()}getNode(E){return this.indexNodes[E]}getGroup(E){return this.indexGroups[E]}getConnection(E){return this.indexConnections[E]}addNode(E){-1<this.nodes.indexOf(E)||(this.nodes.push(E),this.indexNodes[E.guid]=E,this.computePairs())}removeNode(E){const F=this.nodes.indexOf(E);0>F||(this.nodes.splice(F,1),delete this.indexNodes[E.guid],this.computePairs())}addGroup(E){-1<this.groups.indexOf(E)||(this.groups.push(E),this.indexGroups[E.guid]=E,this.computePairs())}removeGroup(E){const F=this.groups.indexOf(E);0>F||(this.groups.splice(F,1),delete this.indexGroups[E.guid],this.computePairs())}addConnection(E){-1<this.connections.indexOf(E)||(this.connections.push(E),this.indexConnections[E.guid]=E,this.computePairs())}removeConnection(E){const F=this.connections.indexOf(E);0>F||(this.connections.splice(F,1),delete this.indexConnections[E.guid],this.computePairs())}computePairs(){this.spreadingPairs=[];for(let E=0,F=this.nodes.length-1;E<F;E+=1){const G=this.nodes[E];for(let H=E+1,I=this.nodes.length;H<I;H+=1){const J=this.nodes[H],K=this.connections.find((L)=>L.alpha===G&&L.beta===J||L.alpha===J&&L.beta===G);K||this.spreadingPairs.push([G,J])}}}animationLoop(){if(this.running){const E=Date.now(),F=this.speed*((E-this.lastStep)/100);this.lastStep=E,this.applySpreading(F),this.applyConnections(F),this.updateNodes(F),this.updateGroups(F),this.updateConnections()}}applySpreading(){}applyConnections(){}updateNodes(){}updateGroups(){}updateConnections(){}pause(){this.running=!1}play(){this.running=!0,this.lastStep=Date.now()}visibleTree(){const E=this.nodes.filter((G)=>!G.group),F=this.groups.filter((G)=>!G.group);return[].concat(...[].concat(...E,...F).map((G)=>G.visibleTree()))}toJSON(){return{guid:this.guid,label:this.label,notes:this.notes,width:this.width,height:this.height,orbit:this.orbit,radius:this.radius,speed:this.speed,damping:this.damping,running:this.running,spreading:this.spreading,spring:this.spring,nodes:this.nodes,groups:this.groups,connections:this.connections}}},Node:A,Group:B,Connection:C})})();